@namespace WithTeachers.Pages.Classes
@using WithTeachers.Data
@inject ApplicationUserService ApplicationUserService
@inject ClassService ClassService

<h4 class="form-title"><span class="oi oi-plus" aria-hidden="true"></span> Add a class</h4>
<EditForm class="form-section" Model="@classToAdd" OnValidSubmit="HandleValidSubmitAddClass">
    <DataAnnotationsValidator />

    <div class="input-group col-4">
        <label for="nameClass" class="col-4">Class name:</label>
        <InputText id="nameClass" placeholder="3C, 4A, 6B..." class="form-control col-8" @bind-Value="classToAdd.Name" />
        <ValidationMessage For="@(() => classToAdd.Name)" />
    </div>

    <div class="input-group col-4 offset-1">
        <label for="yearClass" class="col-4">Class year:</label>
        <InputNumber id="yearClass" class="form-control col-8" @bind-Value="classToAdd.Year" />
        <ValidationMessage For="@(() => classToAdd.Year)" />
    </div>

    <button type="submit" class="btn offset-1">Add this class</button>
</EditForm>

@code {
    private ApplicationUser currentUser;
    private Class classToAdd = new Class();

    protected override async Task OnInitializedAsync()
    {
        currentUser = await ApplicationUserService.GetCurrentUser();
        classToAdd.Year = DateTime.Now.Year;
    }

    private async Task HandleValidSubmitAddClass()
    {
        // Adding data
        classToAdd.User = currentUser;
        await ClassService.CreateAsync(classToAdd);

        // Formatting form
        classToAdd = new Class();
        classToAdd.Year = DateTime.Now.Year;
    }
}
