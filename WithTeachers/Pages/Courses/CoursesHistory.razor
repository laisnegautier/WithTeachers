@namespace WithTeachers.Pages.Courses
@using WithTeachers.Data
@inject ApplicationUserService ApplicationUserService
@inject CourseService CourseService

<h3>Your courses</h3>

@if (courses == null)
{
    <p><em>Loading...</em></p>
}
else if (courses.Count == 0)
{
    <p>YA R</p>
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Title</th>
                <th scope="col">Description</th>
                <th scope="col">Password</th>
                <th scope="col">Link</th>
                <th scope="col">Creation date</th>
                <th scope="col">Last update</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in courses)
            {
                <tr>
                    <th scope="row">@(courses.IndexOf(course) + 1)</th>
                    <td>@course.Title</td>
                    <td>@course.Description</td>
                    <td>@((MarkupString)(String.IsNullOrEmpty(course.Password) ? "Not required" : "<strong>"+course.Password+"</strong>"))</td>
                    <td><a href="link.html" title="See this course in details" alt="See this course in details">withteachers.com/courses/@course.Slug</a></td>
                    <td>@course.CreationDate.ToShortDateString()</td>
                    <td>@(course.CreationDate.ToShortDateString() == course.UpdateDate.ToShortDateString() ? "Never updated" : course.CreationDate.ToShortDateString())</td>
                </tr>
            }
        </tbody>
    </table>

}
@code {
    ApplicationUser currentUser;
    private List<Course> courses = null;

    protected override async void OnInitialized()
    {
        currentUser = await ApplicationUserService.GetCurrentUser();
        courses = await CourseService.ReadAllAsync(currentUser);
    }
}