@namespace WithTeachers.Pages.Videoconference
@inject IJSRuntime JSRuntime;

<h3>Room</h3>

@* TEST *@
<button @onclick="Test">@testValue</button>
@* END TEST *@

<div id="container">
    <video id="localVideo" playsinline autoplay muted></video>
    <video id="remoteVideo" playsinline autoplay></video>

    <div>
        <button id="startButton">Start</button>
        <button id="callButton">Call</button>
        <button id="upgradeButton">Turn on video</button>
        <button id="hangupButton">Hang Up</button>
    </div>

    <p>
        View the console to see logging. The <code>MediaStream</code> object <code>localStream</code>, and the <code>RTCPeerConnection</code>
        objects <code>pc1</code> and <code>pc2</code> are in global scope, so you can inspect them in the console as
        well.
    </p>

    <p>
        For more information about RTCPeerConnection, see <a href="http://www.html5rocks.com/en/tutorials/webrtc/basics/"
                                                             title="HTML5 Rocks article about WebRTC by Sam Dutton">
            Getting
            Started With WebRTC
        </a>.
    </p>

    <a href="https://github.com/webrtc/samples/tree/gh-pages/src/content/peerconnection/upgrade"
       title="View source for this page on GitHub" id="viewSource">View source on GitHub</a>
</div>

@code {
    private string testValue = "click";
    string message = "";

    private async Task Test()
    {
        var json = await JSRuntime.InvokeAsync<string>("myFunction");

        testValue = new String(json);
    }
}