@page "/scheduler"

@namespace WithTeachers.Pages.Scheduler
@using WithTeachers.Data
@using System.Globalization
@using System.Collections.Generic
@inject ApplicationUserService ApplicationUserService
@attribute [Authorize]

<h3>Scheduler</h3>

<section class="scheduler">

        <div class="form-group col-4">
            <input type="date" class="form-control datePicker" @bind="@SelectedDate">
        </div>
        <div class="form-group col-4">
            <button class="button-week" @onclick="PreviousWeek">&#8249; Previous week</button>
            <button class="button-week" @onclick="NextWeek">Next week &#8250;</button>
        </div>

            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th></th>
                        <DaysHeading Week="@Week" />
                    </tr>
                </thead>
                <tbody>
                    @{
                        int hour = -1;
                    }
                    @for (int i = 0; i < 48; i++)
                    {
                        hour = i % 2 == 0 ? i / 2 : -1;
                        <tr>
                            @if (hour != -1)
                            {
                                <th rowspan="2">@(hour != -1 ? hour < 13 ? hour + ":00 AM" : hour % 12 + ":00 PM" : "")</th>
                            }
                            @for (int j = 0; j < 7; j++)
                            {
                                <td class="@(hour != -1 ? "dash" : "nolineTop")"></td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
</section>

@code {
    private static DateTime _selectedDate = DateTime.Now;
    private static DateTime SelectedDate
    {
        get => _selectedDate;
        set {
            _selectedDate = value;
            Week = new Week(value);
        }
    }

    private static Week Week = new Week(SelectedDate);

    private void NextWeek() => SelectedDate = SelectedDate.AddDays(7).StartOfWeek(DayOfWeek.Monday);
    private void PreviousWeek() => SelectedDate = SelectedDate.AddDays(-7).StartOfWeek(DayOfWeek.Monday);
}